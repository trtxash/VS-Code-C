/*
01_Array
    功能
        用a[ ][3]探究数组,=
    目的   
        1 学会数组
        2 了解scanf和gets的相同和不同
*/

#include <stdio.h>

int main(void)
{
    /*
    C 语言支持数组数据结构，它可以存储一个固定大小的相同类型元素的顺序集合。数组是用来存储一系列数据，但它往往被认为是一系列相同类型的变量。
    数组的声明并不是声明一个个单独的变量，比如 runoob0、runoob1、...、runoob99，而是声明一个数组变量，比如 runoob，然后使用 runoob[0]、runoob[1]、...、runoob[99] 来代表一个个单独的变量。
    所有的数组都是由连续的内存位置组成。最低的地址对应第一个元素，最高的地址对应最后一个元素。
    如果您省略掉了数组的大小，数组的大小则为初始化时元素的个数
    */
    int a[][3] = {{1, 4}, {3, 2}, {4, 5, 6}, {0}}; // 一个带有 x 行 3 列的数组，{ {1,4}, {3,2}, {4,5,6}, {0} } 第一层大括号表示所有，第二层第n个大括号表示第n行
    printf("%d\n", a[0][0]);
    printf("%d\n", a[0][1]);
    printf("%d\n", a[0][2]);
    printf("%d\n", a[1][0]);
    printf("%d\n", a[1][1]);
    printf("%d\n", a[1][2]);
    printf("%d\n", a[2][0]);
    printf("%d\n", a[2][1]);
    printf("%d\n", a[2][2]);
    /*
    对于字符串数组或字符串指针变量，由于数组名可以转换为数组和指针变量名本身就是地址，因此使用scanf()函数时，不需要在它们前面加上"&"操作符
    gets(s)函数与scanf("%s",s)相似，但不完全相同，使用scanf("%s",s) 函数输入字符串时存在一个问题，就是如果输入了空格会认为字符串结束，空格后的字符将作为下一个输入项处理，但gets()函数将接收输入的整个字符串直到遇到换行为止
    也就是说，gets()函数读取到\n（输入的回车）是会停止读取，但是它不会把\n包含到字符串里面去。然而，和它配合使用的puts函数，却在输出字符串的时候自动换行
    */
    return 0;
}

/*输出结果
----------------------------------------------------------------------------------------------------
1
4
0
3
2
0
4
5
6
----------------------------------------------------------------------------------------------------
*/

// 2021年2月28号21点04分